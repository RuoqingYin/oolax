% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ismev.R
\name{ismev}
\alias{ismev}
\alias{alogLik.gev.fit}
\alias{alogLik.gpd.fit}
\title{Loglikelihood adjustment of ismev fits}
\usage{
\method{alogLik}{gev.fit}(x, cluster = NULL, use_vcov = TRUE, ...)

\method{alogLik}{gpd.fit}(x, cluster = NULL, use_vcov = TRUE, ...)
}
\arguments{
\item{x}{A fitted model object.}

\item{cluster}{see details in \code{\link[chandwich]{adjust_loglik}}.}

\item{use_vcov}{A logical scalar. If \code{use_vcov = TRUE} and the method for
\code{x} exists, we use it to estimate the Hessian of the independence
loglikelihood and pass it as \code{H} to \code{\link[chandwich]{adjust_loglik}}.
Otherwise, set \code{H} as \code{NULL}.}

\item{...}{Further arguments to be passed to the functions in the
sandwich package \code{\link[sandwich]{meat}}, if \code{cluster = NULL},
or \code{\link[sandwich:vcovCL]{meatCL}}, otherwise.}
}
\value{
An object of class \code{c("oolax", "chandwich")} with the same structure as an
        object returned from \code{\link[chandwich]{adjust_loglik}}.
}
\description{
Loglikelihood adjustment for fitting Generalised Extreme Value (GEV) model and
Threshold Modelling using generalised Pareto distribution (GPD). The adjustment is
based on package \code{ismev}.
}
\details{
The fitted object x must have S3 methods:
\code{logLikVec}, \code{coef}, and \code{nobs}.  It mayhave method \code{vcov} and
\code{estfun}. If a \code{vcov} method is not available then the variance-covariance
matrix of the model parameters is estimated inside
\code{\link[chandwich]{adjust_loglik}}. If an \code{estfun} method is not available
then the score matrix is estimated using \code{\link[numDeriv]{jacobian}}. More
details can be found on \code{\link[oolax]{logLikVec.gev}}.
}
\examples{
# We need the ismev package
got_ismev <- requireNamespace("ismev", quietly = TRUE)

if (got_ismev) {
  library(ismev)

  # An example from Chandler and Bate (2007)
  y <- c(chandwich::owtemps[, "Oxford"], chandwich::owtemps[, "Worthing"])
  x <- as.matrix(rep(c(1, -1), each = length(y) / 2))
  owfit <- oogev.fit(y, x, mul = 1, sigl = 1, shl = 1, method = "BFGS" )
  year <- rep(1:(length(y) / 2), 2)
  adj_owfit <- alogLik(owfit, cluster = year, cadjust = FALSE)
  summary(adj_owfit)

 # An example from the gpd.fit() documentation
 data(rain)
 fit <- oogpd.fit(rain, 10)
 adj_fit <- alogLik(fit)
 summary(adj_fit)
}
}
\seealso{
\code{\link[chandwich]{adjust_loglik}} Loglikelihood adjustment using the sandwich
estimator.

\code{\link[oolax]{logLikVec.gev}} Loglikelihood vector for GEV Distribution fitted
by \code{\link[evd]{fgev}}

\code{\link[oolax]{logLikVec.pot}} Loglikelihood vector for GPD Distribution fitted
by \code{\link[evd]{fpot}}

\code{\link[oolax]{logLikVec.ismev_gev}} Loglikelihood vector for GEV Distribution
fitted by \code{\link[ismev]{gev.fit}}

\code{\link[oolax]{logLikVec.ismev_gpd}} Loglikelihood vector for GPD Distribution
fitted by \code{\link[ismev]{gpd.fit}}
}
